; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]")
; Using host:port localhost:62861 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
"Confirmez votre email"
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
nil
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/my-tconfig
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/t
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/send-confirmation-email
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
; Evaluating file: register_user_in_db_use_case.clj
nil
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1095$fn$G (protocols.clj:58).
; No implementation of method: :-transact of protocol: #'next.jdbc.protocols/Transactable found for class: nil
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
nil
clj꞉user꞉> 
#'user/init
clj꞉user꞉> 
{:host "localhost", :port 8025, :default-from {:email "me@draines.com", :name "Me"}, :base-url "http://base-url", :product {:name "My product", :link "https://www.google.fr"}}
; 
; SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
; SLF4J: Defaulting to no-operation (NOP) logger implementation
; SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
; MLog initialization issue: slf4j found no binding or threatened to use its (dangerously silent) NOPLogger. We consider the slf4j library not found.
clj꞉user꞉> 
; Applying 001-users
nil
clj꞉user꞉> 
; 24-09-02 18:28:36 MOTH-CCXKHVG6YL DEBUG [taoensso.tower:691] - Missing-translation: {:locales [:fr], :scope :confirmation-email, :ks [:intro], :dev-mode? true}
; 24-09-02 18:28:36 MOTH-CCXKHVG6YL DEBUG [taoensso.tower:691] - Missing-translation: {:locales [:fr], :scope :confirmation-email, :ks [:outro], :dev-mode? true}
; 24-09-02 18:28:36 MOTH-CCXKHVG6YL DEBUG [taoensso.tower:691] - Missing-translation: {:locales [:fr], :scope :confirmation-email, :ks [:instructions], :dev-mode? true}
; {:title Confirmez votre email, :intro [|Missing translation: [[:fr] :confirmation-email [:intro]]|], :outro [|Missing translation: [[:fr] :confirmation-email [:outro]]|], :action [{:instructions |Missing translation: [[:fr] :confirmation-email [:instructions]]|, :button {:link http://base-url/confirm-email?token=1e35f716072a4828a0dc8e60fe598f43&email=j%40gmail.com, :text Confirm email}}], :product {:name My product, :link https://www.google.fr}}
{:name "John Doe", :email "j@gmail.com", :confirmed_at nil, :confirmation-token "1e35f716072a4828a0dc8e60fe598f43", :password_hash "$2a$11$9ZAzT1o6obeA8Ai718GdRuXYNvYNvIME8z7M/az1NvGg9X6fCPK9O"}
clj꞉user꞉> 
#'account.use-cases.register-user-in-db-use-case/my-tconfig
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/t
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
; {:title Confirmez votre email, :intro [Bienvenue], :outro [], :action [{:instructions Pour commencer à utiliser l'application veuillez confirmer votre email en cliquant sur le lien si dessous :, :button {:link http://base-url/confirm-email?token=15cd27f7e2e648efb01479516a766eed&email=js%40gmail.com, :text Confirm email}}], :product {:name My product, :link https://www.google.fr}}
{:name "John Doe", :email "js@gmail.com", :confirmed_at nil, :confirmation-token "15cd27f7e2e648efb01479516a766eed", :password_hash "$2a$11$oM6JrHsRKucQYo1wEqWqBOyADEu0UFHEnBDYW6x3c8WK2I4Lm0GnC"}
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test)
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test)
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test)
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]")
; Using host:port localhost:63381 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
"<doctype>html</doctype><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\" /><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\" /><style media=\"all\" rel=\"stylesheet\" type=\"text/css\">/* Base Styles */*:not(br):not(tr):not(html) { font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif; box-sizing: border-box; }body { width: 100% !important; height: 100%; margin: 0; line-height: 1.4; background-color: #F2F4F6; color: #74787E; text-size-adjust: none; }a { color: #3869D4; }/* Layout Styles */.email-wrapper { width: 100%; margin: 0; padding: 0; background-color: #F2F4F6; }.email-content { width: 100%; margin: 0; padding: 0; }.email-masthead { padding: 25px 0; text-align: center; }.email-masthead_logo { max-width: 400px; border: 0; }.email-masthead_name { font-size: 16px; font-weight: bold; color: #2F3133; text-decoration: none; text-shadow: 0 1px 0 white; }.email-logo { max-height: 50px; }/* Body Styles */.email-body { width: 100%; margin: 0; padding: 0; border-top: 1px solid #EDEFF2; border-bottom: 1px solid #EDEFF2; background-color: #FFF; }.email-body_inner { width: 570px; margin: 0 auto; padding: 0; }.email-footer { width: 570px; margin: 0 auto; padding: 0; text-align: center; }.email-footer p { color: #AEAEAE; }.body-action { width: 100%; margin: 30px auto; padding: 0; text-align: center; }.body-dictionary { width: 100%; overflow: hidden; margin: 20px auto 10px; padding: 0; }.body-dictionary dd { margin: 0 0 10px 0; }.body-dictionary dt { clear: both; color: #000; font-weight: bold; }.body-sub { margin-top: 25px; padding-top: 25px; border-top: 1px solid #EDEFF2; }.content-cell { padding: 35px; }.align-right { text-align: right; }/* Typography */h1 { margin-top: 0; color: #2F3133; font-size: 19px; font-weight: bold; }h2 { margin-top: 0; color: #2F3133; font-size: 16px; font-weight: bold; }h3 { margin-top: 0; color: #2F3133; font-size: 14px; font-weight: bold; }p { margin-top: 0; color: #74787E; font-size: 16px; line-height: 1.5em; }p.sub { font-size: 12px; }p.center { text-align: center; }/* Data table */.data-table-title { width: 100%; margin: 0; font-size: 17px; padding: 20px 0 15px 0; }.data-wrapper { width: 100%; margin: 0; padding: 0 0 35px 0; }.data-table { width: 100%; margin: 0; }.data-table th { text-align: left; padding: 0px 5px; padding-bottom: 8px; border-bottom: 1px solid #EDEFF2; }.data-table th p { margin: 0; color: #9BA2AB; font-size: 12px; }.data-table td { padding: 10px 5px; color: #74787E; font-size: 15px; line-height: 18px; }/* Buttons */.button { display: inline-block; width: 200px; border-radius: 3px; color: #ffffff; font-size: 15px; line-height: 45px; text-align: center; text-decoration: none; text-size-adjust: none; mso-hide: all; }/* Media Queries */@media only screen and (max-width: 600px) { .email-body_inner, .email-footer { width: 100% !important; } }@media only screen and (max-width: 500px) { .button { width: 100% !important; } }</style></head><body><table cellpadding=\"0\" cellspacing=\"0\" class=\"email-wrapper\" width=\"100%\"><tr><td align=\"center\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"email-content\" width=\"100%\"><tr><td class=\"email-masthead\"><a class=\"email-masthead_name\" href=\"http://link.com\" target=\"_blank\">My product</a></td></tr><tr><td class=\"email-body\" width=\"100%\"><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"email-body_inner\" width=\"570\"><tr><td class=\"content-cell\"><h1>hello</h1><p>intro</p><dl class=\"body-dictionary\"></dl><p>outro</p></td></tr></table></td></tr><tr><td><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"email-footer\" width=\"570\"><tr><td class=\"content-cell\"><p class=\"sub center\">&copy; 2024 <a href=\"http://link.com\" target=\"_blank\">My product</a>. All rights reserved.</p></td></tr></table></td></tr></table></td></tr></table></body></html>"
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
#'messages.email.templates.default-html/generate
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
#'messages.email.templates.default-html/generate
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
#'messages.email.templates.default-html/generate
clj꞉messages.email.templates.default-html꞉> 
; {:instructions instructions, :button {:link https://hello, :text click}}
; {:instructions instructions, :button {:link https://hello, :text click}}
nil
clj꞉messages.email.templates.default-html꞉> 
#'messages.email.templates.default-html/generate
clj꞉messages.email.templates.default-html꞉> 
; {:link https://hello, :text click}
; {:link https://hello, :text click}
nil
clj꞉messages.email.templates.default-html꞉> 
#'messages.email.templates.default-html/generate
clj꞉messages.email.templates.default-html꞉> 
; Execution error (ArityException) at messages.email.templates.default-html/generate$fn$iter$fn$fn$iter$fn (REPL:5).
; Wrong number of args (0) passed to: clojure.lang.MapEntry
clj꞉messages.email.templates.default-html꞉> 
#'messages.email.templates.default-html/generate
clj꞉messages.email.templates.default-html꞉> 
; [:link https://hello]
; [:text click]
nil
clj꞉messages.email.templates.default-html꞉> 
#'messages.email.templates.default-html/generate
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
nil
clj꞉messages.email.templates.default-html꞉> 
#'account.use-cases.register-user-in-db-use-case/send-confirmation-email
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
; {:title Confirmez votre email, :intro [Bienvenue], :outro [], :action [{:instructions Pour commencer à utiliser l'application veuillez confirmer votre email en cliquant sur le lien si dessous :, :button [{:link http://base-url/confirm-email?token=2787464d83bf450caf76f447be35d765&email=dewfrefrjdew%40djdewnjkreds.fr, :text Confirm email, :color blue}]}], :product {:name My product, :link https://www.google.fr}}
{:name "John Doe", :email "dewfrefrjdew@djdewnjkreds.fr", :confirmed_at nil, :confirmation-token "2787464d83bf450caf76f447be35d765", :password_hash "$2a$11$oGn0LuE4f5w85lHVlHcnZeIYNUY0PqIX0q6rq7b9bAV9KgXs/0bmO"}
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/input-valid?
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Execution error (FileNotFoundException) at account.infrastructure.datomic-user-schema/eval67710$loading (datomic_user_schema.clj:1).
; Could not locate cuid/core__init.class, cuid/core.clj or cuid/core.cljc on classpath.
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/input-valid?
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/input-valid?
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/update-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/execute
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
{:errors [:invalid-confirmation-token-input]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
{:errors [:email-already-taken]}
clj꞉user꞉> 
{:errors [:invalid-confirmation-token-input]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.domain.user/ConfirmUserEmailInput
clj꞉account.domain.user꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/insert-user
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/update-user
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/insert-user
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
; Execution error (ExceptionInfo) at honey.sql/format-dsl (sql.cljc:1607).
; These SQL clauses are unknown or have nil values: :id, :email(perhaps you need [:lift {:id ...}] here?)
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/update-user
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
; Execution error (ExceptionInfo) at honey.sql/format-dsl (sql.cljc:1607).
; These SQL clauses are unknown or have nil values: :id, :email(perhaps you need [:lift {:id ...}] here?)
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/update-user
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
{:id 1, :name "John Doe", :email "jj@mjk.fr", :password-hash "$2a$11$9ZAzT1o6obeA8Ai718GdRuXYNvYNvIME8z7M/az1NvGg9X6fCPK9O", :confirmed-at nil, :confirmation-token "1e35f716072a4828a0dc8e60fe598f43", :created-at #inst "2024-09-02T18:28:36.718981000-00:00", :updated-at nil}
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
#'account.use-cases.confirm-user-in-db-use-case/update-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/execute
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
{:host "localhost", :port 8025, :default-from {:email "me@draines.com", :name "Me"}, :base-url "http://base-url", :product {:name "My product", :link "https://www.google.fr"}}
clj꞉user꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/update-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; nil
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1005$fn$G (protocols.clj:34).
; No implementation of method: :-execute-one of protocol: #'next.jdbc.protocols/Executable found for class: nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/input-valid?
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/update-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/input-valid?
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/execute
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/get-user-by-email
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
; nil
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; {:data {:token 1e35f716072a4828a0dc8e60fe598f431e35f716072a4828a0dc8e60fe598f43, :email jj@mjk.fr}, :tx #object[com.mchange.v2.c3p0.impl.NewProxyConnection 0x276fe585 com.mchange.v2.c3p0.impl.NewProxyConnection@276fe585 [wrapping: org.postgresql.jdbc.PgConnection@4a5bcdf1]]}
; nil
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; nil
; nil
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; nil
; nil
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; nil
; nil
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/get-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
; Execution error (ClassCastException) at account.infrastructure.postgres.postgres-users-adapter/domain-user-to-db (postgres_users_adapter.clj:13).
; class com.mchange.v2.c3p0.impl.NewProxyConnection cannot be cast to class clojure.lang.IPersistentMap (com.mchange.v2.c3p0.impl.NewProxyConnection and clojure.lang.IPersistentMap are in unnamed module of loader 'app')
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Syntax error compiling at (src/account/use_cases/confirm_user_in_db_use_case.clj:35:9).
; Unable to resolve symbol: token-valid in this context
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/token-valid
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/execute
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/token-valid
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
; 1e35f716072a4828a0dc8e60fe598f431e35f716072a4828a0dc8e60fe598f43
; 1e35f716072a4828a0dc8e60fe598f43
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
; 1e35f716072a4828a0dc8e60fe598f43
; 1e35f716072a4828a0dc8e60fe598f43
; Execution error (ClassCastException) at account.infrastructure.postgres.postgres-users-adapter/domain-user-to-db (postgres_users_adapter.clj:13).
; class com.mchange.v2.c3p0.impl.NewProxyConnection cannot be cast to class clojure.lang.IPersistentMap (com.mchange.v2.c3p0.impl.NewProxyConnection and clojure.lang.IPersistentMap are in unnamed module of loader 'app')
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/update-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
; 1e35f716072a4828a0dc8e60fe598f43
; 1e35f716072a4828a0dc8e60fe598f43
; Execution error (PSQLException) at org.postgresql.core.v3.QueryExecutorImpl/receiveErrorResponse (QueryExecutorImpl.java:2713).
; ERROR: column "comfirmed_at" of relation "users" does not exist
;   Position: 27
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; Syntax error (IllegalArgumentException) compiling new at (src/account/use_cases/confirm_user_in_db_use_case.clj:27:31).
; Unable to resolve classname: Timestamp
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.use-cases.confirm-user-in-db-use-case/update-user
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
; 1e35f716072a4828a0dc8e60fe598f43
; 1e35f716072a4828a0dc8e60fe598f43
{:token "1e35f716072a4828a0dc8e60fe598f43", :email "jj@mjk.fr"}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
; 1e35f716072a4828a0dc8e60fe598f43
; nil
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
; jj@mjk.fr
; 1e35f716072a4828a0dc8e60fe598f43
; nil
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/get-user-by-email
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
#'account.infrastructure.postgres.postgres-users-adapter/insert-user
clj꞉account.infrastructure.postgres.postgres-users-adapter꞉> 
; Evaluating file: confirm_user_in_db_use_case.clj
nil
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
{:errors [:email-confirmation-token-not-found]}
clj꞉account.use-cases.confirm-user-in-db-use-case꞉> 
nil
clj꞉user꞉> 
{:errors [:invalid-confirmation-token-input]}
clj꞉user꞉> 
; {:title Confirmez votre email, :intro [Bienvenue], :outro [], :action [{:instructions Pour commencer à utiliser l'application veuillez confirmer votre email en cliquant sur le lien si dessous :, :button [{:link http://base-url/confirm-email?token=b1a2223151404ba5b421e76da212951f&email=jssa%40gmail.com, :text Confirm email, :color blue}]}], :product {:name My product, :link https://www.google.fr}}
{:token "b1a2223151404ba5b421e76da212951f", :email "jssa@gmail.com"}
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]")
; Using host:port localhost:56176 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
nil
clj꞉user꞉> 
#'user/init
clj꞉user꞉> 
#'user/config
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
; Syntax error compiling at (dev/user.clj:34:5).
; No such namespace: au
clj꞉user꞉> 
; Execution error (FileNotFoundException) at account.use-cases.authenticate-use-case/eval39626$loading (authenticate_use_case.clj:1).
; Could not locate authentication/infrastructure/datomic_account_schema__init.class, authentication/infrastructure/datomic_account_schema.clj or authentication/infrastructure/datomic_account_schema.cljc on classpath. Please check that namespaces with dashes use underscores in the Clojure file name.
clj꞉user꞉> 
; Evaluating file: authenticate_use_case.clj
nil
clj꞉account.use-cases.authenticate-use-case꞉> 
{:errors [:invalid-credentials]}
clj꞉account.use-cases.authenticate-use-case꞉> 
{:errors [:invalid-input]}
clj꞉user꞉> 
{:errors [:invalid-input]}
clj꞉user꞉> 
{:errors [:invalid-input]}
clj꞉user꞉> 
{:errors [:invalid-input]}
clj꞉user꞉> 
; {:email nil, :password Noirfnefwerf#mopgmtrogmroptgm}
{:errors [:invalid-input]}
clj꞉user꞉> 
{:errors [:invalid-credentials]}
clj꞉user꞉> 
{:errors [:invalid-credentials]}
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/find-account-by-email
clj꞉account.use-cases.authenticate-use-case꞉> 
; Execution error (NullPointerException) at java.util.Objects/requireNonNull (Objects.java:233).
; null
clj꞉account.use-cases.authenticate-use-case꞉> 
{:host "localhost", :port 8025, :default-from {:email "me@draines.com", :name "Me"}, :base-url "http://base-url", :product {:name "My product", :link "https://www.google.fr"}}
clj꞉user꞉> 
; Execution error (NullPointerException) at java.util.Objects/requireNonNull (Objects.java:233).
; null
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/find-account-by-email
clj꞉account.use-cases.authenticate-use-case꞉> 
; Execution error (NullPointerException) at java.util.Objects/requireNonNull (Objects.java:233).
; null
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/check-password
clj꞉account.use-cases.authenticate-use-case꞉> 
; Execution error (NullPointerException) at java.util.Objects/requireNonNull (Objects.java:233).
; null
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/check-password
clj꞉account.use-cases.authenticate-use-case꞉> 
; {:email jsssa@gmail.com, :password Noirfnefwerf#mopgmtrogmroptgm, {:id 5, :name John Doe, :email jsssa@gmail.com, :password-hash $2a$11$oYJbwupIvze7tOqYK6Bgaeq0xGRRNaIZNowAw6U8DYW9AzMchBvoS, :confirmed-at #inst "2024-09-03T00:30:35.751000000-00:00", :confirmation-token nil, :created-at #inst "2024-09-03T00:30:35.404730000-00:00", :updated-at nil} :account}
; Execution error (NullPointerException) at java.util.Objects/requireNonNull (Objects.java:233).
; null
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/find-account-by-email
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/check-password
clj꞉account.use-cases.authenticate-use-case꞉> 
; {:email jsssa@gmail.com, :password Noirfnefwerf#mopgmtrogmroptgm, :account {:id 5, :name John Doe, :email jsssa@gmail.com, :password-hash $2a$11$oYJbwupIvze7tOqYK6Bgaeq0xGRRNaIZNowAw6U8DYW9AzMchBvoS, :confirmed-at #inst "2024-09-03T00:30:35.751000000-00:00", :confirmation-token nil, :created-at #inst "2024-09-03T00:30:35.404730000-00:00", :updated-at nil}}
{:jwt "eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50LWlkIjo1LCJleHAiOjE3Mjc5MTU2Nzk2NTJ9.8ZYKRsHFUPNcGDSh5SVlnS9PbEd9yXEuCCFwj-if_Sg"}
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/validate-input
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/check-password
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/find-account-by-email
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/create-token
clj꞉account.use-cases.authenticate-use-case꞉> 
; Execution error (NullPointerException) at crypto.password.bcrypt/check (bcrypt.clj:23).
; Cannot invoke "Object.getClass()" because "target" is null
clj꞉account.use-cases.authenticate-use-case꞉> 
; Evaluating file: authenticate_use_case.clj
nil
clj꞉account.use-cases.authenticate-use-case꞉> 
; Execution error (NullPointerException) at crypto.password.bcrypt/check (bcrypt.clj:23).
; Cannot invoke "Object.getClass()" because "target" is null
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/check-password
clj꞉account.use-cases.authenticate-use-case꞉> 
; {:data {:data {:email jsssa@gmail.com, :password Noirfnefwerf#mopgmtrogmroptgm}, :account {:id 5, :name John Doe, :email jsssa@gmail.com, :password-hash $2a$11$oYJbwupIvze7tOqYK6Bgaeq0xGRRNaIZNowAw6U8DYW9AzMchBvoS, :confirmed-at #inst "2024-09-03T00:30:35.751000000-00:00", :confirmation-token nil, :created-at #inst "2024-09-03T00:30:35.404730000-00:00", :updated-at nil}}}
; Execution error (NullPointerException) at crypto.password.bcrypt/check (bcrypt.clj:23).
; Cannot invoke "Object.getClass()" because "target" is null
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/find-account-by-email
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/create-token
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/execute
clj꞉account.use-cases.authenticate-use-case꞉> 
; {:data {:email jsssa@gmail.com, :password Noirfnefwerf#mopgmtrogmroptgm}, :account {:id 5, :name John Doe, :email jsssa@gmail.com, :password-hash $2a$11$oYJbwupIvze7tOqYK6Bgaeq0xGRRNaIZNowAw6U8DYW9AzMchBvoS, :confirmed-at #inst "2024-09-03T00:30:35.751000000-00:00", :confirmation-token nil, :created-at #inst "2024-09-03T00:30:35.404730000-00:00", :updated-at nil}}
nil
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/create-token
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/execute
clj꞉account.use-cases.authenticate-use-case꞉> 
; {:data {:email jsssa@gmail.com, :password Noirfnefwerf#mopgmtrogmroptgm}, :account {:id 5, :name John Doe, :email jsssa@gmail.com, :password-hash $2a$11$oYJbwupIvze7tOqYK6Bgaeq0xGRRNaIZNowAw6U8DYW9AzMchBvoS, :confirmed-at #inst "2024-09-03T00:30:35.751000000-00:00", :confirmation-token nil, :created-at #inst "2024-09-03T00:30:35.404730000-00:00", :updated-at nil}}
{:jwt "eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50LWlkIjo1LCJleHAiOjE3Mjc5MTU5NTk0MjJ9.JRZNCmAXw9wmZREbca_49m9J4h6GeiBi7c-YT1fCKfI"}
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/check-password
clj꞉account.use-cases.authenticate-use-case꞉> 
{:jwt "eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50LWlkIjo1LCJleHAiOjE3Mjc5MTU5NjY5MzV9.wki6sY7cXDa4-T8rvpaRGio_-IR53ScVfE38crZ_DvQ"}
clj꞉account.use-cases.authenticate-use-case꞉> 
{:errors [:invalid-credentials]}
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/email-not-confirmed
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/check-confirmed
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/execute
clj꞉account.use-cases.authenticate-use-case꞉> 
{:jwt "eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50LWlkIjo1LCJleHAiOjE3Mjc5MTYwNzk1MDl9.pKq0tsSsJHn6ex0OAaADvIm1ewJo0fK3K6SO19KqcjQ"}
clj꞉account.use-cases.authenticate-use-case꞉> 
{:errors [:not-confirmed]}
clj꞉account.use-cases.authenticate-use-case꞉> 
#'account.use-cases.authenticate-use-case/email-not-confirmed
clj꞉account.use-cases.authenticate-use-case꞉> 
{:errors [:email-not-confirmed]}
clj꞉account.use-cases.authenticate-use-case꞉> 
; Evaluating file: authenticate_use_case_test.clj
nil
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:42)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:43)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:53)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
#'account.use-cases.authenticate-use-case-test/mock-get-user-by-email
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:42)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:43)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:53)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
#'account.use-cases.authenticate-use-case-test/mock-get-user-by-email
clj꞉account.use-cases.authenticate-use-case-test꞉> 
#'account.use-cases.authenticate-use-case-test/test-authenticate-use-case
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:42)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:43)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:53)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
#'account.use-cases.authenticate-use-case-test/test-authenticate-use-case
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; jjjjj
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:43)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:44)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:54)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; Evaluating file: authenticate_use_case_test.clj
nil
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:46)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:47)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:57)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
#'account.use-cases.authenticate-use-case-test/mock-with-transaction
clj꞉account.use-cases.authenticate-use-case-test꞉> 
#'account.use-cases.authenticate-use-case-test/test-authenticate-use-case
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:47)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:48)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (NO_SOURCE_FILE:58)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; Evaluating file: authenticate_use_case_test.clj
nil
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:46)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:47)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:57)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]")
; Using host:port localhost:57260 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; Ran 0 tests containing 0 assertions.
; 0 failures, 0 errors.
{:test 0, :pass 0, :fail 0, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; Ran 0 tests containing 0 assertions.
; 0 failures, 0 errors.
{:test 0, :pass 0, :fail 0, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; Evaluating file: authenticate_use_case_test.clj
nil
clj꞉account.use-cases.authenticate-use-case-test꞉> 
; 
; Testing account.use-cases.authenticate-use-case-test
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:46)
; Valid credentials
; expected: (nil? (:errors result))
;   actual: (not (nil? [:invalid-credentials]))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:47)
; Valid credentials
; expected: (= (:data result) {:jwt "mock-jwt-token"})
;   actual: (not (= nil {:jwt "mock-jwt-token"}))
; 
; FAIL in (test-authenticate-use-case) (authenticate_use_case_test.clj:57)
; Unconfirmed email
; expected: (= (:errors result) [auth/email-not-confirmed])
;   actual: (not (= [:invalid-credentials] [:email-not-confirmed]))
; 
; Ran 1 tests containing 5 assertions.
; 3 failures, 0 errors.
{:test 1, :pass 2, :fail 3, :error 0, :type :summary}
clj꞉account.use-cases.authenticate-use-case-test꞉> 
