; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]")
; Using host:port localhost:62861 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
"Confirmez votre email"
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
nil
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/my-tconfig
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/t
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/send-confirmation-email
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
; Evaluating file: register_user_in_db_use_case.clj
nil
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
; Execution error (IllegalArgumentException) at next.jdbc.protocols/eval1095$fn$G (protocols.clj:58).
; No implementation of method: :-transact of protocol: #'next.jdbc.protocols/Transactable found for class: nil
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
nil
clj꞉user꞉> 
#'user/init
clj꞉user꞉> 
{:host "localhost", :port 8025, :default-from {:email "me@draines.com", :name "Me"}, :base-url "http://base-url", :product {:name "My product", :link "https://www.google.fr"}}
; 
; SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
; SLF4J: Defaulting to no-operation (NOP) logger implementation
; SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
; MLog initialization issue: slf4j found no binding or threatened to use its (dangerously silent) NOPLogger. We consider the slf4j library not found.
clj꞉user꞉> 
; Applying 001-users
nil
clj꞉user꞉> 
; 24-09-02 18:28:36 MOTH-CCXKHVG6YL DEBUG [taoensso.tower:691] - Missing-translation: {:locales [:fr], :scope :confirmation-email, :ks [:intro], :dev-mode? true}
; 24-09-02 18:28:36 MOTH-CCXKHVG6YL DEBUG [taoensso.tower:691] - Missing-translation: {:locales [:fr], :scope :confirmation-email, :ks [:outro], :dev-mode? true}
; 24-09-02 18:28:36 MOTH-CCXKHVG6YL DEBUG [taoensso.tower:691] - Missing-translation: {:locales [:fr], :scope :confirmation-email, :ks [:instructions], :dev-mode? true}
; {:title Confirmez votre email, :intro [|Missing translation: [[:fr] :confirmation-email [:intro]]|], :outro [|Missing translation: [[:fr] :confirmation-email [:outro]]|], :action [{:instructions |Missing translation: [[:fr] :confirmation-email [:instructions]]|, :button {:link http://base-url/confirm-email?token=1e35f716072a4828a0dc8e60fe598f43&email=j%40gmail.com, :text Confirm email}}], :product {:name My product, :link https://www.google.fr}}
{:name "John Doe", :email "j@gmail.com", :confirmed_at nil, :confirmation-token "1e35f716072a4828a0dc8e60fe598f43", :password_hash "$2a$11$9ZAzT1o6obeA8Ai718GdRuXYNvYNvIME8z7M/az1NvGg9X6fCPK9O"}
clj꞉user꞉> 
#'account.use-cases.register-user-in-db-use-case/my-tconfig
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
#'account.use-cases.register-user-in-db-use-case/t
clj꞉account.use-cases.register-user-in-db-use-case꞉> 
; {:title Confirmez votre email, :intro [Bienvenue], :outro [], :action [{:instructions Pour commencer à utiliser l'application veuillez confirmer votre email en cliquant sur le lien si dessous :, :button {:link http://base-url/confirm-email?token=15cd27f7e2e648efb01479516a766eed&email=js%40gmail.com, :text Confirm email}}], :product {:name My product, :link https://www.google.fr}}
{:name "John Doe", :email "js@gmail.com", :confirmed_at nil, :confirmation-token "15cd27f7e2e648efb01479516a766eed", :password_hash "$2a$11$oM6JrHsRKucQYo1wEqWqBOyADEu0UFHEnBDYW6x3c8WK2I4Lm0GnC"}
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test)
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test)
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test)
; Jacking in...
; Connecting using "deps.edn" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/guillaume/perso/caja/components/account; clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"1.1.1"},cider/cider-nrepl {:mvn/version,"0.47.1"}}}' -M:dev:test -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]")
; Using host:port localhost:63381 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
